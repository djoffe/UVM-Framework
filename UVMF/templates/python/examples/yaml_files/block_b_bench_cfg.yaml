uvmf:
  benches:
    "block_b" :
      ## Specify the top-level block
      top_env: "block_b"
      parameters:
      - name: "TEST_CP_IN_DATA_WIDTH"
        type: "int"
        value: "20"
      - name: "TEST_CP_IN_ADDR_WIDTH"
        type: "int"
        value: "10"
      - name: "TEST_CP_OUT_ADDR_WIDTH"
        type: "int"
        value: "21"
      - name: "TEST_UDP_DATA_WIDTH"
        type: "int"
        value: "40"
      top_env_params:
        - { name: "CP_IN_DATA_WIDTH"  , value: "TEST_CP_IN_DATA_WIDTH"  }
        - { name: "CP_IN_ADDR_WIDTH"  , value: "TEST_CP_IN_ADDR_WIDTH"  }
        - { name: "CP_OUT_ADDR_WIDTH" , value: "TEST_CP_OUT_ADDR_WIDTH" }
        - { name: "UDP_DATA_WIDTH"    , value: "TEST_UDP_DATA_WIDTH"    }
      active_passive:   
        - { bfm_name: "control_plane_in", value: "ACTIVE" }
        - { bfm_name: "control_plane_out", value: "ACTIVE" }
        - { bfm_name: "secure_data_plane_in", value: "ACTIVE" }
        - { bfm_name: "secure_data_plane_out", value: "ACTIVE" }
      clock_half_period : "6ns"
      clock_phase_offset : "21ns"
      reset_assertion_level : "True"
      reset_duration : "250ns"
      interface_params:
        - bfm_name: "control_plane_in"
          value:
            - { name: "ADDR_WIDTH", value: "TEST_CP_IN_ADDR_WIDTH" }
            - { name: "DATA_WIDTH", value: "TEST_CP_IN_DATA_WIDTH" }
        - bfm_name: "control_plane_out"
          value:
            - { name: "ADDR_WIDTH", value: "TEST_CP_OUT_ADDR_WIDTH" }
        - bfm_name: "unsecure_data_plane_in"
          value:
            - { name: "DATA_WIDTH", value: "TEST_UDP_DATA_WIDTH" }
